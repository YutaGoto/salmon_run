# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2

ruby_image: &ruby_image
  circleci/ruby:2.5.1-node-browsers

bundle_cache_key: &bundle_cache_key
  v1-dependencies-{{ checksum "Gemfile.lock" }}

jobs:
  build:
    docker:
      # specify the version you desire here
      - image: *ruby_image
        environment:
          RAILS_ENV: test
          PGHOST: 127.0.0.1
          PGUSER: root

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      - image: circleci/postgres:9.4
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: salmon_run_test

      - image: circleci/node:10.1.0-browsers

    working_directory: ~/salmon_run

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - *bundle_cache_key
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies gems
          command: bundle install --jobs=4 --retry=3 --path vendor/bundle
      - run:
          name: install dependencies packages
          command: yarn

      - save_cache:
          paths:
            - ./vendor/bundle
          key: *bundle_cache_key

      # Database setup
      - run: bundle exec rails db:create
      - run: bundle exec rails db:schema:load

      - run:
          name: RuboCop check
          command: bundle exec rubocop

      - run:
          name: Code smell detector by Reek
          command: bundle exec reek /app -c .todo.reek

      - run:
          name: Analysis of security vulnerabilities by brakeman
          command: bundle exec brakeman

      - run: mkdir ~/rspec

      - run:
          name: Run rspec in parallel
          command: |
            bundle exec rspec --format progress \
                              $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)

      # collect reports
      - store_test_results:
          path: ~/rspec

  ci-bundle-update:
    docker:
      - image: *ruby_image

    environment:
      TZ: "/usr/share/zoneinfo/Asia/Tokyo"

    steps:
      - checkout

      - restore_cache:
          key: *bundle_cache_key

      - run:
          name: circleci-bundle-update-pr
          command: |
            gem update bundler --no-document
            gem install circleci-bundle-update-pr
            bundle config --local path vendor/bundle
            circleci-bundle-update-pr

workflows:
  version: 2

  ci-bundle-update:
    triggers:
      - schedule:
          cron: "0 0 * * 1-5"  # UTC
          filters:
            branches:
              only: master

    jobs:
      - ci-bundle-update
