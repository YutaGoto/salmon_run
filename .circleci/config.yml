version: 2.1

ruby_image: &ruby_image
  circleci/ruby:2.5.3-node-browsers

bundle_cache_key: &bundle_cache_key
  v1-dependencies-{{ checksum "Gemfile.lock" }}

executors:
  docker-exec:
    docker:
      - image: *ruby_image
        environment:
          CC_TEST_REPORTER_ID: 'c4d8f2b21e4a0af7b3fd7d4c679296b36840811826fff835064dae9ffca2231f'
          RAILS_ENV: test
          PGHOST: 127.0.0.1
          PGUSER: root

      - image: circleci/postgres:9.4
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: salmon_run_test

      - image: circleci/node:10.1.0-browsers


jobs:
  build_and_test:
    executor: docker-exec

    working_directory: ~/salmon_run

    steps:
      - checkout
      - run:
          name: Install System Dependencies
          command: |
            sudo apt-get update
            sudo apt-get install -y libappindicator1 fonts-liberation
            export CHROME_BIN=/usr/bin/google-chrome
            wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
            sudo dpkg -i google-chrome*.deb

      - restore_cache:
          keys:
          - *bundle_cache_key
          - v1-dependencies-

      - run:
          name: Setup Code Climate test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter

      - run:
          name: install dependencies gems
          command: bundle install --jobs=4 --retry=3 --path vendor/bundle
      - run:
          name: install dependencies packages
          command: yarn

      - save_cache:
          paths:
            - ./vendor/bundle
          key: *bundle_cache_key

      - run: bundle exec rails db:create
      - run: bundle exec rails db:schema:load

      - run:
          name: RuboCop check
          command: bundle exec rubocop

      - run:
          name: Code smell detector by Reek
          command: bundle exec reek /app -c .todo.reek

      - run:
          name: Analysis of security vulnerabilities by brakeman
          command: bundle exec brakeman

      - run: mkdir ~/rspec

      - run:
          name: Run rspec in parallel
          command: |
            ./cc-test-reporter before-build
            bundle exec rspec --format progress \
                              $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
            ./cc-test-reporter after-build --coverage-input-type simplecov --exit-code $?

      - store_test_results:
          path: ~/rspec

workflows:
  version: 2
  build:
    jobs:
    - build_and_test
